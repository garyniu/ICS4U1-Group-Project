#BlueJ class context
comment0.target=GameWorld
comment0.text=\r\n\ Write\ a\ description\ of\ class\ MyWorld\ here\r\n\r\n\ @author\ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=GameWorld()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ MyWorld.\r\n\r\n
comment10.params=
comment10.target=void\ addCurrencyB()
comment11.params=x
comment11.target=void\ setEventStatusA(boolean)
comment12.params=x
comment12.target=void\ setEventStatusB(boolean)
comment13.params=
comment13.target=void\ timer()
comment14.params=
comment14.target=void\ chooseEvent()
comment14.text=\r\n\ The\ event\ choosing\ process\ is\ repeated\ for\ both\ sides.\ \r\n\ \r\n\ In\ order\ to\ avoid/minimize\ events\ repeating,\ there\ are\ booleans\ tracking\ \r\n\ if\ an\ event\ has\ happened\ yet\ or\ not.\ If\ the\ boolean\ is\ false,\ the\ event\ has\r\n\ not\ occured\ yet.\ \r\n\ However,\ if\ the\ booleans\ are\ simply\ checked\ in\ the\ same\ order\ every\ time\r\n\ an\ event\ is\ chosen,\ then\ there\ is\ no\ randomization\ to\ it,\ as\ it\ will\ always\ \r\n\ check\ the\ first\ boolean\ first,\ meaning\ in\ one\ cycle,\ the\ first\ event\ will\ \r\n\ be\ the\ one\ corresponding\ to\ the\ first\ boolean\ checked.\r\n\ \r\n\ This\ is\ an\ ordering\ +\ event\ choice\ algorithm,\ that\ has\ 4\ different\ orders\ \r\n\ that\ the\ booleans\ will\ be\ checked\ in,\ and\ thus,\ being\ able\ to\ check\ the\ \r\n\ booleans\ in\ a\ random\ order,\ and\ having\ events\ occur\ in\ a\ random\ order.\ \r\n\ \r\n\ First,\ the\ code\ will\ check\ if\ all\ four\ events\ have\ already\ happened.\ If\ so,\ \r\n\ all\ the\ booleans\ will\ be\ reset\ back\ to\ false.\ \r\n\ Next,\ the\ order\ choice\ is\ randomized\ (there\ are\ 4\ orders\ as\ there\ are\ 4\ events)\r\n\ The\ algorithm\ will\ skip\ over\ to\ the\ if\ statement\ for\ the\ corresponding\ order\ number\r\n\ Within\ the\ if\ statement\ are\ 4\ nested\ if\ statements,\ checking\ if\ each\ event\ has\ happened\r\n\ or\ not.\ If\ the\ event\ has\ happened,\ it\ will\ move\ onto\ the\ next.\ Otherwise,\ \r\n\ the\ event\ will\ occur/spawn,\ and\ the\ boolean\ of\ the\ event\ occuring\ is\ set\ to\ true\r\n\ \r\n\ Note\ that\ the\ order\ chosen\ for\ each\ side\ is\ different,\ so\ the\ chances\ of\ the\ \r\n\ same\ event\ happening\ on\ both\ sides\ in\ a\ given\ instance\ is\ possible,\ but\ not\ guaranteed\r\n\ \r\n\ Any\ variables\ ending\ with\ 'A'\ are\ correlated\ to\ the\ left\ side,\ 'B'\ to\ the\ right\ side\r\n
comment2.params=
comment2.target=void\ act()
comment3.params=
comment3.target=void\ spawnMachines()
comment4.params=
comment4.target=void\ machineWorkerA()
comment5.params=
comment5.target=int\ getWorkerCount()
comment6.params=newWorkerCount
comment6.target=void\ setWorkerCount(int)
comment7.params=
comment7.target=int\ getCurrencyA()
comment8.params=
comment8.target=int\ getCurrencyB()
comment9.params=
comment9.target=void\ addCurrencyA()
numComments=15
